<?php

/**
 * Autogenerated file for problem RecoverBinarySearchTree
 */

namespace LeetCode\Problems\RecoverBinarySearchTree;

use LeetCode\Tests\Helpers\TreeNode;

class RecoverBinarySearchTree
{
    protected $result;
    protected $count = 0;

    /**
     * @param TreeNode $root
     * @return NULL
     */
    public function recoverTree($root)
    {
        $this->parseInorder($root);
        sort($this->result);
        $this->checkSwap($root);
        return $root;
    }

    public function checkSwap($root)
    {
        if ($root == null) {
            return;
        }
        $this->checkSwap($root->left);
        if ($this->result[$this->count] != $root->val) {
            $root->val = $this->result[$this->count];
        }
        $this->count++;
        $this->checkSwap($root->right);
    }

    public function parseInorder($root)
    {
        if ($root == null) {
            return;
        }
        $this->parseInorder($root->left);
        $this->result[] = $root->val;
        $this->parseInorder($root->right);
    }
}

<?php

/**
 * Autogenerated file for problem CombinationSum
 */

namespace LeetCode\Problems\CombinationSum;

class CombinationSum
{
    /**
     * @param Integer[] $candidates
     * @param Integer $target
     * @return Integer[][]
     */
    public function combinationSum($candidates, $target)
    {
        $result = [];
        $this->search($candidates, count($candidates), 0, $target, [], $result);
        return $result;
    }

    public function search($candidates, $candidatesLength, $startIndex, $target, $set, &$result)
    {
        if ($target == 0) {
            array_push($result, $set);
            return;
        }
        for ($i = $startIndex; $i < $candidatesLength; $i++) {
            $rem = $target - $candidates[$i];
            if ($rem >= 0) {
                array_push($set, $candidates[$i]);
                $this->search($candidates, $candidatesLength, $i, $rem, $set, $result);
                array_pop($set);
            }
        }
    }
}

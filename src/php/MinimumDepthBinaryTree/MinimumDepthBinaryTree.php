<?php

/**
 * Autogenerated file for problem MinimumDepthBinaryTree
 */

namespace LeetCode\Problems\MinimumDepthBinaryTree;

class MinimumDepthBinaryTree
{
    protected $result =  [];

    /**
     * @param TreeNode $root
     * @return Integer
     */
    public function minDepth($root)
    {
        $this->parsePath($root, 0);
        if (count($this->result) == 0) {
            return 0;
        } else {
            return min($this->result);
        }
    }

    public function parsePath($root, $path)
    {
        if (is_null($root)) {
            return;
        }
        $path += 1;
        $this->parsePath($root->left, $path);
        $this->parsePath($root->right, $path);
        if ($root->left == null && $root->right == null) {
            $this->result[] = $path;
        }
    }
}

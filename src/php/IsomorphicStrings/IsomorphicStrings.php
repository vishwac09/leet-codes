<?php

/**
 * Autogenerated file for problem IsomorphicStrings
 */

namespace LeetCode\Problems\IsomorphicStrings;

class IsomorphicStrings
{
    /**
     * @param String $s
     * @param String $t
     * @return Boolean
     */
    public function isIsomorphic($s, $t)
    {
        $sLen = strlen($s);
        $tLen = strlen($t);
        if ($sLen != $tLen) {
            return false;
        }
        $sCharCount = array_count_values(str_split($s));
        $tCharCount = array_count_values(str_split($t));
        $tMap = $sMap = [];
        $sVMap = $tVMap = [];
        for ($i = 0; $i < $sLen; $i++) {
            $random = rand(1, 2600);
            if ($sCharCount[$s[$i]] > 1) {
                $sMap[] = $sVMap[$s[$i]] ?? $random;
                if (!isset($sVMap[$s[$i]])) {
                    $sVMap[$s[$i]] = $random;
                }
            } else {
                $sMap[] = 0;
            }

            if ($tCharCount[$t[$i]] > 1) {
                $tMap[] = $tVMap[$t[$i]] ?? $random;
                if (!isset($tVMap[$t[$i]])) {
                    $tVMap[$t[$i]] = $random;
                }
            } else {
                $tMap[] = 0;
            }
        }
        $j = implode('', $sMap);
        $k = implode('', $tMap);
        return $j === $k;
    }
}
